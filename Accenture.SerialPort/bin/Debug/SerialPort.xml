<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SerialPort</name>
    </assembly>
    <members>
        <member name="F:串口测试.WaitRec.strSend">
            <summary>
            发送的内容
            </summary>
        </member>
        <member name="F:串口测试.WaitRec.second">
            <summary>
            发送一次等待的秒数
            </summary>
        </member>
        <member name="F:串口测试.WaitRec.time_To_Timeout">
            <summary>
            超时时间
            </summary>
        </member>
        <member name="M:串口测试.WaitRec.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            声明
            </summary>
            <param name="strSend">发送的数据</param>
            <param name="second">发送之后进行判断的时间间隔</param>
            <param name="time_To_Timeout">发送数据之后的超时时间</param>
        </member>
        <member name="M:串口测试.SerialPortHelper.#ctor(System.String,System.Int32,System.Int32,System.IO.Ports.StopBits,System.IO.Ports.Parity,System.Action{System.String},System.Action{System.String})">
            <summary>
            初始化信息
            </summary>
            <param name="com">端口号，COM1</param>
            <param name="btl">波特率，9600</param>
            <param name="sjw">数据位，8</param>
            <param name="tzw">停止位，StopBits.One</param>
            <param name="xyw">校验位，Parity.None</param>
            <param name="func">处理接收数据的方法</param>
        </member>
        <member name="M:串口测试.SerialPortHelper.StringToBytes(System.String)">
            <summary>
            将string转换到Byte[]
            </summary>
            <param name="Str_Datasource"></param>
            <returns></returns>
        </member>
        <member name="M:串口测试.SerialPortHelper.SendData(System.String)">
            <summary>
            下发数据
            </summary>
            <param name="Str_Source"></param>
        </member>
        <member name="M:串口测试.SerialPortHelper.SendData(System.String,System.Int32,System.Int32)">
            <summary>
            下发数据
            </summary>
            <param name="str">需要下发的数据</param>
            <param name="second">系统每隔单位时间去判断的时间间隔</param>
            <param name="time_To_Timeout">每次接收数据设置的超时时间</param>
        </member>
        <member name="M:串口测试.SerialPortHelper.FunctionGetSum(System.String)">
            <summary>
            字符串的取和计算
            </summary>
            <param name="Str_Source"></param>
            <returns></returns>
        </member>
        <member name="M:串口测试.SerialPortHelper.FunctionGetCmdCorrect(System.String)">
            <summary>
            判断格式是否正确
            </summary>
            <param name="Str_Source"></param>
            <returns></returns>
        </member>
        <member name="M:串口测试.SerialPortHelper.WaitRec(System.Object)">
            <summary>
            是一个循环，如果没有接受到需要的数据继续等待直到等到超时时间为止
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:串口测试.SerialPortHelper.ByteToString(System.Byte[])">
             <summary>  
            字符数组转字符串16进制  
             </summary>  
             <param name="InBytes"> 二进制字节 </param>  
             <returns>类似"01 02 0F" </returns>  
        </member>
        <member name="M:串口测试.SerialPortHelper.StringToByte(System.String)">
             <summary>  
            strhex 转字节数组  
             </summary>  
             <param name="InString">类似"01 02 0F" 用空格分开的  </param>  
             <returns> </returns>  
        </member>
        <member name="M:串口测试.SerialPortHelper.StringToByte_2(System.String)">
             <summary>  
             strhex转字节数组  
             </summary>  
             <param name="InString">类似"01 02 0F" 中间无空格 </param>  
             <returns> </returns>  
        </member>
        <member name="M:串口测试.SerialPortHelper.Str_To_0X(System.String)">
             <summary>  
            字符串 转16进制字符串  
             </summary>  
             <param name="InString">unico </param>  
             <returns>类似“01 0f” </returns>  
        </member>
        <member name="M:Accenture.SerialPort.RedisHelper.DtToRedis(System.Data.DataTable,System.String,ServiceStack.Redis.RedisClient)">
            <summary>
            Redis缓存
            </summary>
            <param name="dtb"></param>
            <returns></returns>
        </member>
        <member name="M:Accenture.SerialPort.DBHelper.MyExecuteNonQuery(System.String)">
            <summary>
            增删改 返回int类型
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:Accenture.SerialPort.DBHelper.MyExecuteScalar(System.String)">
            <summary>
            查询单值 返回Object类型
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:Accenture.SerialPort.DBHelper.MyExecuteReader(System.String)">
            <summary>
            查询 返回SqlDataReader对象
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:Accenture.SerialPort.DBHelper.GetDataTable(System.String)">
            <summary>
            导出数据
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:Accenture.SerialPort.DBHelper.GetDataTable(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
            这个暂时没用到
             </summary>
             <param name="sql"></param>
             <param name="ParametersList"></param>
             <returns></returns>
        </member>
        <member name="F:Accenture.SerialPort.frmExport.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Accenture.SerialPort.frmExport.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Accenture.SerialPort.frmExport.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Accenture.SerialPort.frmMain.Open">
            <summary>
            打开
            </summary>
        </member>
        <member name="M:Accenture.SerialPort.frmMain.Off">
            <summary>
            关闭
            </summary>
        </member>
        <member name="M:Accenture.SerialPort.frmMain.btnOpen_Click(System.Object,System.EventArgs)">
            <summary>
            打开串口
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Accenture.SerialPort.frmMain.SendData(System.Byte[])">
            <summary>
            发送数据
            </summary>
            <param name="sender"></param>
            <param name="data"></param>
        </member>
        <member name="M:Accenture.SerialPort.frmMain.SendData(System.String)">
            <summary>
            发送数据
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Accenture.SerialPort.frmMain.num(System.String)">
            <summary>
            数组循环
            </summary>
            <returns></returns>
        </member>
        <member name="M:Accenture.SerialPort.frmMain.num1(System.String)">
            <summary>
            macid累加
            </summary>
            <param name="value1"></param>
            <returns></returns>
        </member>
        <member name="M:Accenture.SerialPort.frmMain.btn">
            <summary>
            查询二维码是否存在于数据库中做判断
            </summary>
        </member>
        <member name="M:Accenture.SerialPort.frmMain.getData(System.Int32)">
            <summary>
            得到下发指令的数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Accenture.SerialPort.frmMain.getAgreementCode(System.Int32)">
            <summary>
            拼接并下发协议数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Accenture.SerialPort.frmMain.btnSend_Click(System.Object,System.EventArgs)">
            <summary>
            扫描提示
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Accenture.SerialPort.frmMain.Hex16StringToHex16Byte(System.String)">
            <summary>
            此方法用于将16进制的字符串转换成16进制的字节数组
            </summary>
            <param name="_hex16String">要转换的16进制的字符串。</param>
        </member>
        <member name="M:Accenture.SerialPort.frmMain.Button2_Click(System.Object,System.EventArgs)">
            <summary>
            锁定参数
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Accenture.SerialPort.frmMain.strToHexByte(System.String)">
            <summary>
            字符串转换16进制字节数组
            </summary>
            <param name="hexString"></param>
            <returns></returns>
        </member>
        <member name="M:Accenture.SerialPort.frmMain.ClearSelf">
            <summary>
            清空文本框
            </summary>
        </member>
        <member name="M:Accenture.SerialPort.frmMain.btnClearSend_Click(System.Object,System.EventArgs)">
            <summary>
            清空发送区
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Accenture.SerialPort.frmMain.textBox3_TextChanged(System.Object,System.EventArgs)">
            <summary>
            扫码枪直接输入
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Accenture.SerialPort.frmMain.Bie(System.String)">
            <summary>
            接收的数据进行累加
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Accenture.SerialPort.frmMain.btnClearRev_Click(System.Object,System.EventArgs)">
            <summary>
            清空接收区
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Accenture.SerialPort.frmMain.frmMain_Load(System.Object,System.EventArgs)">
            <summary>
            取消跨线程检查
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Accenture.SerialPort.frmMain.Com_DataReceived(System.Object,System.IO.Ports.SerialDataReceivedEventArgs)">
            <summary>
            当接收到串口发包数据时触发的事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Accenture.SerialPort.frmMain.OnPayload(System.String,System.String)">
            <summary>
            当接收到艺宝盒子发包数据时触发的事件
            </summary>
        </member>
        <member name="M:Accenture.SerialPort.frmMain.btnCheck_Click(System.Object,System.EventArgs)">
            <summary>
            成品校验
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Accenture.SerialPort.frmMain.btnExport_Click(System.Object,System.EventArgs)">
            <summary>
            导出
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Accenture.SerialPort.frmMain.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:Accenture.SerialPort.frmMain.Dispose(System.Boolean)">
            <summary>
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:Accenture.SerialPort.frmMain.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:Accenture.SerialPort.LoraForm.ISOpen">
            <summary>
            服务器是否打开
            </summary>
        </member>
        <member name="P:Accenture.SerialPort.LoraForm.UdpServer">
            <summary>
            udp代理
            </summary>
        </member>
        <member name="P:Accenture.SerialPort.LoraForm.BeatSendTime">
            <summary>
            心跳包下发时间用于判断超时
            </summary>
        </member>
        <member name="P:Accenture.SerialPort.LoraForm.TimeCount">
            <summary>
            界面时间控制下发心跳包
            </summary>
        </member>
        <member name="F:Accenture.SerialPort.LoraForm.IsSendBeat">
            <summary>
            是否下发了心跳
            </summary>
        </member>
        <member name="F:Accenture.SerialPort.LoraForm.SendBeatTimeCount">
            <summary>
            计时当前心跳包已下发时间知道收到回复或者超时
            </summary>
        </member>
        <member name="M:Accenture.SerialPort.LoraForm.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Accenture.SerialPort.LoraForm.Udpserver_ShowEvent(Wima.Lora.Model.ASCSPackage)">
            <summary>
            接收到数据由udpserver推送
            </summary>
            <param name="package">ASCS数据包</param>
        </member>
        <member name="M:Accenture.SerialPort.LoraForm.strToHexByte(System.String)">
            <summary>
            字符串转换16进制字节数组
            </summary>
            <param name="hexString"></param>
            <returns></returns>
        </member>
        <member name="M:Accenture.SerialPort.LoraForm.ToTimeStamp(System.DateTime)">
            <summary>
            将时间转换为时间戳
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Accenture.SerialPort.LoraForm.Send(System.String,System.Byte[])">
            <summary>
            发送数据
            </summary>
            <param name="deveui">要发送的数据</param>
            <param name="data">是否需要保存到已发送的列表中</param>
        </member>
        <member name="F:Accenture.SerialPort.LoraForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Accenture.SerialPort.LoraForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Accenture.SerialPort.LoraForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Accenture.SerialPort.CSConfig.SendCycle">
            <summary>
            发送周期
            </summary>
        </member>
        <member name="P:Accenture.SerialPort.CSConfig.CwCycle">
            <summary>
            测温周期
            </summary>
        </member>
        <member name="M:Accenture.SerialPort.Program.Main">
            <summary>
            应用程序的主入口点。
            </summary>
        </member>
        <member name="T:Accenture.SerialPort.UdpMan.ShowDataHandle">
            <summary>
            显示推送委托事件
            </summary>
            <param name="package"></param>
        </member>
        <member name="M:Accenture.SerialPort.UdpMan.ProcessLoraPackage(System.Byte[])">
            <summary>
            把收到的数据处理成字符串
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Accenture.SerialPort.UdpMan.ProcessJsonData(System.String)">
            <summary>
            处理json数据
            </summary>
            <param name="jsText"></param>
        </member>
        <member name="M:Accenture.SerialPort.UdpMan.ProcessJsonLogin(System.String)">
            <summary>
            处理登陆包
            </summary>
            <param name="jsText"></param>
            <returns></returns>
        </member>
        <member name="M:Accenture.SerialPort.UdpMan.SendLoginBeatSend">
            <summary>
            发送登陆包
            </summary>
            <returns></returns>
        </member>
        <member name="M:Accenture.SerialPort.UdpMan.SendPacket(System.String,System.String)">
            <summary>
            发送下行包
            </summary>
            <param name="deveui"></param>
            <param name="Data"></param>
            <returns></returns>
        </member>
        <member name="T:Accenture.SerialPort.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:Accenture.SerialPort.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:Accenture.SerialPort.Properties.Resources.Culture">
            <summary>
              重写当前线程的 CurrentUICulture 属性
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:Accenture.SerialPort.Properties.Resources.green">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Accenture.SerialPort.Properties.Resources.icon_unsafe_url1">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Accenture.SerialPort.Properties.Resources.red">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Accenture.SerialPort.Properties.Resources.server">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="M:BXHSerialPort.PublicMethod.OutToExcelFromDataTable(System.String,System.Data.DataTable,System.Boolean)">
            <summary>
            datatable输出到excel
            </summary>
            <param name="fileName">文件名</param>
            <param name="dt">datatable</param>
            <param name="UseFirstRowColumnsName">是否使用dt的列名</param>
        </member>
        <member name="M:BXHSerialPort.PublicMethod.DtToTupe(System.Int32,System.Int32,System.Data.DataTable,System.Boolean)">
            <summary>
            dt转换到tuple
            </summary>
            <param name="Xcell">顶点行</param>
            <param name="Ycell">顶点列</param>
            <param name="dt">datatable</param>
            <param name="UseFirstRowColumnsName">是否使用dt的列名</param>
            <returns></returns>
        </member>
        <member name="M:BXHSerialPort.PublicMethod.WriteToExcelCell(System.String,System.Collections.Generic.List{System.Tuple{System.Int32,System.Int32,System.Object,System.String}},System.String)">
            <summary>
            插入到excel的cell
            </summary>
            <param name="fileName">excel文件名</param>
            <param name="dst">目标 (行，列，值)</param>
            <param name="sheetName">默认sheetName,可以不写</param>
        </member>
    </members>
</doc>
